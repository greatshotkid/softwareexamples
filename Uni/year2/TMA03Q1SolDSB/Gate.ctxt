#BlueJ class context
comment0.target=Gate
comment0.text=\ \r\n\ A\ Gate\ in\ an\ airport\ has\ a\ number\ and\ is\ for\ an\ arrival\ or\ departure.\ \r\n\ It\ is\ used\ for\ a\ particular\ flight\ number\ and\ it\ may\ be\ open\ or\ \r\n\ closed\ for\ passengers.\r\n\ @author\ David\ Shaun\ Brown\ \r\n\ @version\ 2023.05.01\r\n
comment1.params=gateNum\ arrival\ fltNum
comment1.target=Gate(int,\ boolean,\ java.lang.String)
comment1.text=\r\n\ Question\ 1\ ai)\ Add\ a\ public\ constructor\ to\ the\ class\ Gate\ with\ the\ signature\r\n\ \r\n\ Constructor\ for\ the\ class\ gate\r\n\ @param\ int\ gateNum\ -\ the\ gate\ number,\ \r\n\ @param\ boolean\ arrival\ -\ true\ for\ arrival\ and\ false\ for\ departure,\r\n\ @param\ String\ fltNum\ -\ the\ flight\ number\ of\ plane\ using\ gate\r\n
comment10.params=
comment10.target=java.lang.String\ toString()
comment10.text=\r\n\ Return\ a\ String\ representation\ of\ a\ Gate\ including\r\n\ its\ class\ name,\ allowing\ for\ extension\ by\ subclasses.\r\n\ @return\ the\ string\ representation\ of\ the\ gate\ \r\n
comment11.params=obj
comment11.target=boolean\ equals(java.lang.Object)
comment11.text=\r\n\ Question\ 1\ aii)\ Add\ an\ equals\ method\ to\ Gate\ that\ overrides\ the\ Object\ class\ equals\ method\r\n\ Overriding\ equals()\ to\ compare\ gate\ number\ and\ flight\ number\r\n\ \r\n@param\ Gate\ object\r\n@return\ true\ if\ \ Gate\ objects\ are\ the\ same\ (gate\ number\ and\ flight\ number\r\notherwise\ return\ false\r\n
comment12.params=
comment12.target=int\ hashCode()
comment12.text=\r\n\ Question\ 1\ aiii)\ Add\ public\ hashcode\ method\r\n\ \r\n\ Adds\ a\ hashCode\ method\ to\ Gate\ using\ the\ Objects.hash\ method,\ passing\ to\ it\r\n\ @param\ gate\ number\ and\r\n\ @param\ flight\ number\r\n\ \r\n\ @return\ a\ hashCode\r\n\ \r\n
comment2.params=
comment2.target=int\ getGateNum()
comment2.text=\r\n\ Getter\ for\ the\ gate\ number.\r\n\ @return\ The\ number\ of\ the\ gate\r\n
comment3.params=aGateNum
comment3.target=void\ setGateNum(int)
comment3.text=\r\n\ Setter\ for\ the\ gate\ number.\r\n\ @param\ aGateNum\ the\ gate's\ number\r\n
comment4.params=
comment4.target=boolean\ isArrival()
comment4.text=\r\n\ Getter\ for\ the\ gate\ arrival\ status\ -\ true\ if\ for\ arrival.\r\n\ @return\ the\ arrival\ /\ departure\ status\ of\ the\ gate\r\n
comment5.params=isArrival
comment5.target=void\ setArrival(boolean)
comment5.text=\r\n\ Setter\ for\ whether\ gate\ is\ for\ an\ arrival\ or\ for\ a\ departure.\r\n\ @param\ isArrival\ The\ arrival/\ departure\ status\ of\ the\ gate\r\n
comment6.params=
comment6.target=java.lang.String\ getFltNum()
comment6.text=\r\n\ Getter\ for\ the\ gate's\ flight\ number.\r\n\ @return\ The\ flight\ number\ of\ the\ gate\r\n
comment7.params=aFltNum
comment7.target=void\ setFltNum(java.lang.String)
comment7.text=\r\n\ Setter\ for\ the\ gate's\ flight\ number.\r\n\ @param\ aFltNum\ The\ flight\ number\ for\ the\ gate\r\n
comment8.params=
comment8.target=boolean\ isOpen()
comment8.text=\r\n\ Getter\ for\ the\ gate\ status\ -\ open\ or\ closed.\r\n\ @return\ status\ of\ the\ gate\r\n
comment9.params=isOpen
comment9.target=void\ setOpen(boolean)
comment9.text=\r\n\ Setter\ for\ open.\r\n\ @param\ isOpen\ The\ gate's\ open/\ closed\ status\r\n
numComments=13
