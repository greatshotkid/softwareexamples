#BlueJ class context
comment0.target=Room
comment0.text=\r\n\ Q1\ (a)\r\n\ Room\ allows\ user\ to\ interact\ with\ a\ collection\ of\ rooms.\r\n\ Interaction\ allows\ users\ to\:\r\n\ Book\ a\ room\r\n\ Print\ a\ list\ of\ rooms\r\n\ Calculate\ bill\ for\ room\r\n\ Verify\ the\ format\ of\ a\ room's\ number\r\n\ @author\ (David\ Shaun\ Brown)\r\n\ @version\ (2022.12.04)\r\n
comment1.params=aGuest\ aNumber\ aRate
comment1.target=Room(java.lang.String,\ java.lang.String,\ double)
comment1.text=\r\n\ Q1\ (c)\ Add\ a\ constructor\ to\ the\ class\ Room\ with\ the\ modifier\ and\ header\r\n\ public\ Room(String\ aGuest,\ String\ aNumber,\ double\ aRate)\r\n\ The\ constructor\ uses\ its\ three\ parameters\ to\ set\ the\ values\ of\ the\ corresponding\ fields.\r\n
comment10.params=
comment10.target=java.lang.String\ description()
comment10.text=\r\n\ Q1\ (h)\ Add\ a\ method\ called\ description\ that\ takes\ no\ parameters\ and\ returns\ a\ string\ describing\ the\ room,\ using\ the\ following\ format\:\r\n\ type\ room\ number\ (availability)\ guest\r\n\ Here\ the\ type\ and\ number\ should\ be\ replaced\ by\ the\ actual\ type\ and\ number\ of\ the\ room.\ For\ example,\ the\ method\ might\ return\ the\ string\r\n\ Single\ room\ 21A\ (available)\r\n\ or\r\n\ Single\ room\ 21A\ (reserved)\ Joe\ Bloggs\r\n\ depending\ on\ whether\ the\ room\ is\ available\ or\ not,\ as\ determined\ by\ its\ isAvailable\ method.\r\n
comment2.params=
comment2.target=java.lang.String\ getGuest()
comment2.text=\r\n\ Q1\ (d)\ Now\ add\ the\ following\ public\ methods\ to\ the\ Room\ class\:\r\n\ (i)\ Getter\ methods\ for\ the\ three\ fields,\ with\ names\ getGuest,\ getNumber,\ and\ getDailyRate.\r\n\ Returns\ the\ name\ of\ guest\r\n
comment3.params=
comment3.target=java.lang.String\ getNumber()
comment3.text=\r\n\ Returns\ the\ room\ number\r\n
comment4.params=
comment4.target=double\ getDailyRate()
comment4.text=\r\n\ Returns\ the\ daily\ rate\ of\ room\ in\ \u00A3\r\n
comment5.params=newGuest
comment5.target=void\ setGuest(java.lang.String)
comment5.text=\r\n\ (d)(ii)\ A\ setter\ method\ for\ the\ guest\ field,\ called\ setGuest.\r\n
comment6.params=newDailyRate
comment6.target=void\ setDailyRate(double)
comment6.text=\r\n\ (d)(iii)\ .A\ setter\ method\ for\ the\ dailyRate\ field,\ called\ setDailyRate.\r\n
comment7.params=
comment7.target=boolean\ isAvailable()
comment7.text=\ \r\n\ Q1(e)\ Add\ a\ method\ to\ tell\ if\ the\ room\ is\ available\ or\ not,\ called\ isAvailable.\ \r\n\ The\ method\ takes\ no\ parameters\ and\ returns\ true\ if\ the\ room\ is\ available,\ \r\n\ and\ otherwise\ returns\ false.\r\n\ A\ room\ is\ considered\ available\ if\ its\ guest\ is\ an\ empty\ string\r\n\ (i.e.,\ a\ string\ of\ length\ 0).\r\n
comment8.params=
comment8.target=boolean\ verifyRoom()
comment8.text=\r\n\ Q1(f)Add\ a\ method\ verifyRoom()\ that\ returns\ true\ if\ the\ room\ has\ a\ valid\ number,\ and\ otherwise\ returns\ false.\r\n\ A\ room\ number\ string\ must\ be\ 3\ characters\ in\ length,\ otherwise\ the\ method\ returns\ false.\r\n\ The\ first\ two\ characters\ should\ represent\ a\ room\ number\ from\ one\ to\ ninety-nine,\ which\ in\ string\ form\ are\ represented\ as\ "01"\ to\ "99",\ otherwise\ the\ room\ number\ is\ invalid.\r\n\ The\ third\ character\ in\ the\ room\ number\ must\ be\ either\ 'A'\ or\ 'B'\ or\ 'C',\ otherwise\ the\ room\ number\ is\ invalid.\r\n
comment9.params=
comment9.target=java.lang.String\ getType()
comment9.text=\r\nQ1\ (g)\ Add\ a\ method\ getType\ that\ returns\ a\ string\ describing\ the\ type\ of\ the\ room,\ based\ on\ the\ room\ number's\ third\ character.\ \r\n\ You\ may\ assume\ that\ the\ room\ number\ is\ valid.\r\n\ If\ the\ room\ number's\ third\ character\ is\ 'A'\ the\ method\ returns\ "Single".\ If\ the\ room\ type\ is\ 'B',\ the\ method\ returns\ "Double",\ otherwise\ the\ method\ returns\ "Family".\r\n
numComments=11
